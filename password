selection = 1
choice = "nothing"
word = "nothing"
menu = true
user = ""
done = false
time = os.startTimer(.8333)
	function title()
		term.clear()
		term.setCursorPos(1,1)
		header()
	end
	
	function header()
		local stuff = getsettings()
		if(stuff["time"] == "true")then
			stuff["time"] = true
		else
			stuff["time"] = false
		end
		x,y = term.getSize()
		term.setCursorPos(1,1)
		term.clearLine()
		write("Door Lock")
		if(stuff["lockstate"]=="locked")then
			term.setCursorPos(x/2-9,1)
			write("**TERMINAL IS LOCKED**")
		end
		if(usertype=="Owner" or usertype=="Admin")then
			term.setCursorPos(x-8,1)
			print(textutils.formatTime(os.time(), stuff["time"]))
		else
			print()
		end
		local x, y = term.getSize()
		local header="-"
		for index = 0, x-2, 1 do
			header = header.."-"
		end
		print(header)
		print(" ")
	end
	
	function getsettings()
		local stuff = {}
		local open = fs.open("userinfo/settings" , "r")
		stuff["side"] = open.readLine()
		stuff["lockstate"] = open.readLine()
		stuff["date"] = open.readLine()
		stuff["admin"] = open.readLine()
		stuff["list"] = open.readLine()
		stuff["time"] = open.readLine()
		open.close()
		return (stuff)
	end
	
	function middle(word,count)
		local x, y = term.getSize()
		if(word==" ")then
			term.setCursorPos(x/2,count+5)
		else
			term.setCursorPos(x/2-(string.len(word)/2),count+5)
		end
	end	
		
	function addspace(newword, number)
		numSpaces = ""
		spaces=""
		local x, y = term.getSize()
		word = tostring(newword)
		if(number==nil)then
				numSpaces = (x/3)-string.len(word)-4
				for derp = 0, numSpaces, 1 do
					spaces = spaces .. " "
				end
		else
				numSpaces = number-string.len(word)
				for derp = 0, numSpaces, 1 do
					spaces = spaces .. " "
				end
		end
		return(spaces)
	end
	
	function guiSelection(max,min,place)
		local running  = true
		time = os.startTimer(.8333)
		local selection = place
		while running do
			local Event, id = os.pullEvent()
			if(Event=="key")then
				if (id==208) then
					selection=selection+1
				elseif (id==200) then
					selection=selection-1
				end
				if(selection==min-1) then
					selection=max
				elseif(selection==max+1) then
					selection=min
				end
				running = false
				return selection , id
			elseif(Event=="timer")then
				header()
				time = os.startTimer(.8333)
				if(textutils.formatTime(os.time(), false)=="0:00 AM")then
					local stuff = getsettings()
					local edit = fs.open("userinfo/settings" , "w")
					edit.writeLine(stuff["side"])
					edit.writeLine(stuff["lockstate"])
					edit.writeLine(stuff["date"]+1)
					edit.writeLine(stuff["admin"])
					edit.writeLine(stuff["list"])
					edit.writeLine(stuff["time"])
					edit.close()
				end
			end
		end
	end
	
	function start()
		title()
		print("Welcome")
		sleep(2)
		title()
		if (fs.exists("userinfo")==false) then
			fs.makeDir("userinfo")
		end
		if (fs.exists("userinfo/firsttime")==false) then
			open = fs.open("userinfo/firsttime" , "w")
			open.write("first time")
			open.close()
			title()
			print("Welcome")
			sleep(1)
			title()
			print("System Setup")
			print(" ")
			print(" ")
			print("Please create your username")
			write(":> ")
			local username = io.read()
			print("Please create your password")
			write(":> ")
			local pass = read("*")
			local edit = fs.open("userinfo/"..username , "w")
			edit.writeLine(pass)
			edit.writeLine("Owner")
			edit.writeLine("0")
			edit.writeLine("never")
			edit.close()
			title()
			print("Hello "..username.." you are currently this computer's Owner")
			print("To finish setup, if you have not already done so")
			print("close this program and rename is as startup")
			print()
			x, y = term.getCursorPos()
			print("where is the door in relation to the terminal?")
			while done == false do
				write(":>")
				side = io.read()
				if(side=="top"or"bottom"or"left"or"right"or"front"or"back")then
					done = true
					open = fs.open("userinfo/firsttime" , "w")
					open.writeLine("first time")
					open.close()
					
					open = fs.open("userinfo/settings" , "w")
					open.writeLine(side)
					open.writeLine("unlocked")
					open.writeLine("0")
					open.wirteLine("false")--admin stuff
					open.writeLine("false")--list
					open.writeLine("false")--time
					open.close()
				else
					write("unknown side please try again")
					sleep(1)
					term.clearLine()
					term.setCursorPos(1,y)
					term.clearLine()
				end
			end
			print()
			print(":Hit Any Key to Continue")
			Event, key = os.pullEvent("key")
			choice = "nothing"
		end	
		if (fs.exists("userinfo/firsttime")==true) then
			--promptuserinfo()
			open = fs.open("userinfo/settings" , "r")
			local derp = open.readLine()
			side = open.readLine()
			open.close()
		end
		
	end
	
	function getDiskInfo(path)
		if(path) then
	        path = path.."/userinfo"
	        file = io.open(path, "r")
	    end    
	    if(file) then
	    	user = file:read()
	    	pass = file:read()
	    end
		if(file) then file:close() file = nil end   
		return user,pass
	end
	
	function promptuserinfo()
		choice = "nothing"
		local stuff = getsettings()
		user = " "
		done = false
		while done==false do
			while true do
				title()
				print(" ")
				print("Enter ID card or hit Enter to continue")
				Event,pram1,pram2,pram3 = os.pullEvent()
				if(Event=="disk")then
					 local path = disk.getMountPath(pram1)
					 username,password = getDiskInfo(path)
					 disk.eject(pram1)
					 break
				elseif(Event=="key" and pram1==28)then
					title()
					print()
					print("Enter Your Username")
					write(":> ")
					username = io.read()
					user = username
					print("Enter Your Password")
					write(":> ")
					password = read("*")
					break
				end		
			end	
			if (fs.exists("userinfo/"..username)==true) then
				local open = fs.open("userinfo/"..username , "r")
				local pass = open.readLine()
				usertype = open.readLine()
				local logins = open.readLine()
				local lastlogin = open.readLine()
				open.close()
				if(stuff["lockstate"]=="unlocked") then
					if (pass==password) then
						if (usertype=="Employee")then
							title()
							print("Access Granted")
							sleep(1)
							title()
							print("Opening Door...")
							sleep(.5)
							rs.setOutput(stuff["side"] , true)
							title()
							print("Door Open")
							sleep(3)
							rs.setOutput(stuff["side"] , false)
							title()
							print("Closing Door...")
							sleep(1)
						elseif (usertype=="Admin"or"Owner") then
							choice = "guimenu"
							done = true
						end
						local edit = fs.open("userinfo/"..username , "w")
						edit.writeLine(pass)
						edit.writeLine(usertype)
						edit.writeLine(logins+1)
						edit.writeLine(textutils.formatTime(os.time(), false))
						edit.writeLine(stuff["date"])
						edit.close()
					elseif(password~=pass)then
						print("Password is incorrect")
						sleep(2)
					end
				elseif(stuff["lockstate"]=="locked") then
					if(usertype=="Owner") then
						choice = "guimenu"
						done = true
						local edit = fs.open("userinfo/"..username , "w")
						edit.writeLine(pass)
						edit.writeLine(usertype)
						edit.writeLine(logins+1)
						edit.writeLine(textutils.formatTime(os.time(), false))
						edit.writeLine(stuff["date"])
						edit.close()
					else
						title()
						print("**THIS TERMINAL HAS BEEN LOCKED**")
						sleep(1)
					end
				end
			else
				print("Username does not exists")
				sleep(1)
			end
		end
	end
	

	function gui()
		local stuff = getsettings()
		title()
		print("Username:> "..user.." Type:> "..usertype)
		print()
		if (selection == 1) then
			print("[Add New Account]")
		
		else
			print(" Add New Account")
		
		end
		if (selection == 2) then
			print("[Edit An Account]")
		
		else
			print(" Edit An Account")
		
		end
		if (selection == 3) then
			print("[Delete Account ]")
			
		else 
			print(" Delete Account")
		
		end
		if (selection == 4) then
			print("[List Accounts  ]")
		
		else 
			print(" List Accounts")
			
		end
		if (selection == 5) then
			print("[LogOut         ]")
			
		else 
			print(" LogOut")
		end
		if (selection == 6) then
			print("[Open Door      ]")
		else
			print(" Open Door")
		end
		if (selection == 7) then
			
			if(stuff["lockstate"]=="unlocked")then
				print("[Lock Terminal  ]")
			elseif(stuff["lockstate"]=="locked")then
				print("[Unlock Terminal]")
			end		
		else 
			if(stuff["lockstate"]=="unlocked")then
				print(" Lock Terminal")
			elseif(stuff["lockstate"]=="locked")then
				print(" Unlock Terminal")
			end	
		end
		if (selection ==8) then
			print("[Settings       ]")
		else
			print(" Settings")
		end
		if (selection == 9) then
			print("[Quit Program   ]")
		
		else 
			print(" Quit Program")
			
		end
	
	end
	
	
	function guimenu()
		local stuff = getsettings()
		choice = "nothing"
		local done = false
		selection = 1
		gui()
		while done==false do
			selection, key = guiSelection(9,1,selection)
			gui(selection)
			if(key==28) then
				if (selection==1) then
					choice="add"
					done=true
				elseif (selection==2) then	
					choice="edit"
					done=true
				elseif (selection==3) then
					choice="delete"
					done=true
				elseif (selection==4) then
					choice="list"
					done=true
				elseif (selection==5) then
					done=true
					title()
					print("Logging out")
					sleep(1)
					selection = 1
					choice="nothing"
					done = true
					usertype = "nothing"
				elseif (selection==6) then
					title()
					print("Access Granted")
					sleep(1)
					title()
					print("Opening Door...")
					sleep(.5)
					print(side)
					rs.setOutput(stuff["side"] , true)
					title()
					print("Door Open")
					sleep(3)
					rs.setOutput(stuff["side"] , false)
					title()
					print("Closing Door...")
					sleep(1)
					done=true
					choice="nothing"
				elseif (selection==7) then
					if(usertype=="Owner") then
						done = true
						choice="lock"
					else 
						title()
						print("//!!ERROR!!This fucntion is off limits//")
						sleep(1)
						done = true
						choice = "guimenu"
					end
				elseif (selection==8) then
					if(usertype=="Owner") then
						done = true
						choice="settings"
					else 
						title()
						print("//!!ERROR!!This fucntion is off limits//")
						sleep(1)
						done = true
						choice = "guimenu"
					end
				elseif (selection==9) then
					if(usertype=="Owner") then
						done = true
						menu = false
					else 
						title()
						print("//!!ERROR!!This fucntion is off limits//")
						sleep(1)
						done = true
						choice = "guimenu"
					end
				end
			end	
		end
	end

	function addGui()
		title()
		x,yaa = term.getCursorPos()
		if(addSelection==1)then
			print("Username:["..addusername.."]")
		else
			print("Username: "..addusername)
		end
		x,ybb = term.getCursorPos()
		if(addSelection==2)then
			print("Password:["..addpass.."]")
		else
			print("Password: "..addpass)
		end
		x,ycc = term.getCursorPos()
		if(addSelection==3)then
			print("Level   :["..addlevel.."]")
		else
			print("Level   : "..addlevel)
		end
		if(addSelection==4)then
			print("    [DONE]")
		else
			print("     DONE")
		end
		print()
	end
	
	function add()
		addSelection = 1
		adding = true
		addusername = " "
		addpass = "----"
		addlevel = "----"
		while adding==true do
			addGui()
			addSelection, key = guiSelection(4,1,addSelection)
			if(key==28)then
				if(addSelection==1)then
					term.setCursorPos(1,yaa)
					term.clearLine()
					write("Username: ")
					local newuser = io.read()
					if(fs.exists("userinfo/"..newuser)==true) then
						term.setCursorPos(1,yaa)
						term.clearLine()
						write("Username: "..addusername)
					else
						addusername = newuser
						addpass = " "
						addlevel = " "
					end
				elseif(addSelection==2 and addusername~=" ")then
					term.setCursorPos(1,ybb)
					term.clearLine()
					write("Password: ")
					local newpass = io.read()
					
					addpass = newpass
				elseif(addSelection==3 and addusername~=" ")then
					term.setCursorPos(1,ycc)
					term.clearLine()
					write("Level   : ")
					local newlevel = io.read()
					if(usertype=="Admin")then
						if(newlevel=="Admin" or newlevel=="admin" or newlevel=="Owner" or newlevel=="owner")then
							newlevel=addlevel
						else
							if(newlevel=="employee" or newlevel=="Employee" or newlevel=="admin" or newlevel=="Admin" or newlevel=="owner" or newlevel=="Owner")then
								if (newlevel=="employee") then
									newlevel="Employee"
								elseif (newlevel=="admin") then
									newlevel="Admin"
								elseif(newlevel=="owner")then
									newlevel="Owner"
								end
								addlevel = newlevel
							end
						end
					elseif(usertype=="Owner")then
						
						if(newlevel=="employee" or newlevel=="Employee" or newlevel=="admin" or newlevel=="Admin" or newlevel=="owner" or newlevel=="Owner")then
							if (newlevel=="employee") then
								newlevel="Employee"
							elseif (newlevel=="admin") then
								newlevel="Admin"
							elseif(newlevel=="owner")then
								newlevel="Owner"
							end
							addlevel = newlevel
						end
					end
				elseif(addSelection==4 and addusername~=" " and addpass~=" " and addlevel~=" ")then
					adding=false
					local open = fs.open("userinfo/"..addusername , "w")
					open.writeLine(addpass)
					open.writeLine(addlevel)
					open.writeLine("0")
					open.writeLine("never")
					open.writeLine("0")
					open.close()
					title()
					print("User Added")	
					sleep(1)	
				elseif(addSelection==4 and addusername==" ")then
					adding = false
				end
			elseif(key==211)then
				adding = false
			end		
		end
		choice = "guimenu"
			
	end
	
	function editGui()
		local read = fs.open("userinfo/"..editusername , "r")
		local pass = read.readLine()
		local level = read.readLine()
		read.close()
		title()
		x,ya = term.getCursorPos()
		if(editSelection==1)then
			print("Username:["..editusername.."]")
		else
			print("Username: "..editusername)
		end
		x,yb = term.getCursorPos()
		if(editSelection==2)then
			print("Password:["..pass.."]")
		else
			print("Password: "..pass)
		end
		x,yc = term.getCursorPos()
		if(editSelection==3)then
			print("Level   :["..level.."]")
		else
			print("Level   : "..level)
		end
		if(editSelection==4)then
			print("    [DONE]")
		else
			print("     DONE")
		end
	end
	
	function editMenu()
		editing=true
		editSelection=1
		while editing do
			local read = fs.open("userinfo/"..editusername , "r")
			local pass = read.readLine()
			local level = read.readLine()
			local logins = read.readLine()
			local lastlog = read.readLine()
			local lastdate = read.readLine()
			read.close()
			editGui()
			editSelection , key = guiSelection(4,1,editSelection)
			if(key==28)then

				if(editSelection==1)then
					term.setCursorPos(1,ya)
					term.clearLine()
					write("Username: ")
					local newuser = io.read()
					if(fs.exists("userinfo/"..newuser)==true) then
						term.setCursorPos(1,ya)
						term.clearLine()
						write("Username: "..editusername)
					else
						fs.delete("userinfo/"..editusername)
						local open = fs.open("userinfo/"..newuser , "w")
						open.writeLine(pass)
						open.writeLine(level)
						open.writeLine(logins)
						open.writeLine(lastlog)
						open.writeLine(lastdate)
						open.close()
						editusername = newuser
					end
				elseif(editSelection==2)then
					term.setCursorPos(1,yb)
					term.clearLine()
					write("Password: ")
					local newpass = io.read()
					local open = fs.open("userinfo/"..editusername , "w")
					open.writeLine(newpass)
					open.writeLine(level)
					open.writeLine(logins)
					open.writeLine(lastlog)
					open.writeLine(lastdate)
					open.close()
				elseif(editSelection==3)then
					term.setCursorPos(1,yc)
					term.clearLine()
					write("Level   : ")
					local newlevel = io.read()
					if(newlevel=="employee" or newlevel=="Employee" or newlevel=="admin" or newlevel=="Admin" or newlevel=="owner" or newlevel=="Owner")then
						if (newlevel=="employee") then
							newlevel="Employee"
						elseif (newlevel=="admin") then
							newlevel="Admin"
						elseif(newlevel=="owner")then
							newlevel="Owner"
						end
					end
					if(usertype=="Admin")then
						if(newlevel=="Admin" or newlevel=="Owner")then
							print("//!!ERROR!!User Not Authorised To Make This Change//")
						else
							local open = fs.open("userinfo/"..editusername , "w")
							open.writeLine(pass)
							open.writeLine(newlevel)
							open.writeLine(logins)
							open.writeLine(lastlog)
							open.writeLine(lastdate)
							open.close()
						end
					elseif(usertype=="Owner")then
						local open = fs.open("userinfo/"..editusername , "w")
						open.writeLine(pass)
						open.writeLine(newlevel)
						open.writeLine(logins)
						open.writeLine(lastlog)
						open.writeLine(lastdate)
						open.close()
					end
				elseif(editSelection==4)then
					editing = false
				end
			end
		end
		choice="guimenu"
	end
	
	function edit()
		title()
		print("Enter the username you would like to edit")
		write(":> ")
		editusername = io.read()
		if (fs.exists("userinfo/"..editusername)==true) then
			local read = fs.open("userinfo/"..editusername , "r")
			editpass = read.readLine()
			editlevel = read.readLine()
			read.close()
			if(editlevel=="Admin" or editlevel=="Owner") then
				if(usertype=="Owner") then
					editMenu()
				else
					print("//!!ERROR!!User Not Authorised To Edit This Account//")
					sleep(1)
				end
			else
				editMenu()
			end
		else
			print("//!!ERROR!!User Does Not Exists//")
			sleep(1)
		end
	end
	
	function delete()
		title()
		print("Enter the username you would like to delete") 
		write(":> ")
		local username = io.read()
		if (fs.exists("userinfo/"..username)==true) then
			local read = fs.open("userinfo/"..username , "r")
			local pass = read.readLine()
			local level = read.readLine()
			read.close()
			if(level=="Admin" or level=="Owner") then
				if(usertype=="Owner") then
					fs.delete("userinfo/"..username)
					title()
					print("User deleted")
					sleep(1)
				else
					print("//!!ERROR!!User Not Authorised To Delete This Account//")
					sleep(1)
				end
			else
				fs.delete("userinfo/"..username)
				title()
				print("User deleted")
				sleep(1)
			end
		else 
			print("//!!ERROR!!User Does Not Exists//")
			sleep(1)
		end
		choice = "guimenu"
	end
	
	function displayAccount(user)
		local running = true
		local derp = 1
		local stuff = getsettings()
		
		local read = fs.open("userinfo/"..user , "r")
		local pass = read.readLine()
		local level = read.readLine()
		local numLogins = read.readLine()
		local lastlogtime = read.readLine()
		local lastlogdate = read.readLine()
		read.close()
		
		term.clear()
		term.setCursorPos(1,1)
		while running do
			title()
			print("---------")
			print("|  0 0  |")
			print("|   |   |")
			print("|  \\_/  |")
			print("---------")
			print(user)
			print()
			print("-userinfo-")
			print("Password: "..pass)
			print("UserLevel: "..level)
			print("# of logins: "..numLogins)
			if(lastlog=="never")then
				print("Last login: "..(integer)(lastlog))
			else
				print("Last login: "..lastlogtime.." "..(tonumber(stuff["date"])-tonumber(lastlogdate)).." days ago")
			end
			print()
			print(":Hit Any Key to Continue")
			derp , key = guiSelection(2,1,derp)
			if(key~=nil)then
				running = false
			end
		end	
	end
	
	function otherList()
		local selection = 1
		local number = 6
		local endnum=8
		local running = true
		local count = 0
		local accountuser = {}
		local place = 0
		local filename = fs.list("userinfo")
		local derp = true
		for number=1,5,1 do
			accountuser[number] = " "
		end
		for _,file in ipairs( filename ) do
			if (file=="firsttime" or file=="settings") then
			else
				accountuser[number] = file
				number = number+1
			end
		end
		for anumber=table.getn(accountuser),table.getn(accountuser)+2,1 do
			accountuser[anumber] = " "
			number = number+1
		end
		--if(count>1)then
		--	number=number-1
		--end
		--if(count<8)then
		--	endnum = number
		--else
		--	endnum = 8
		--end
		while running do
			derp = true
			place = 0
			term.clear()
			term.setCursorPos(1,1)
			term.setCursorPos(15,4)
			for derp=1,20,1 do
				write("-")
			end
			for start=1+count,endnum+count,1 do
				if(start-count == endnum/2)then
					term.setCursorPos(16,10)
					write("[")
				end
				middle(accountuser[start],place)
				write(accountuser[start])
				if(start-count == endnum/2)then
					term.setCursorPos(33,10)
					write("]")
				else
					print()
				end
				place = place+1
			end
			term.setCursorPos(15,13)
			for derp=1,20,1 do
				write("-")
			end
			while derp do
				Event, key = os.pullEvent("key")
				if(endnum~=number)then
					if (key==208) then
						title()
						count=count+1
						derp = false
						selection = selection+1
					elseif (key==200) then
						title()
						count=count-1
						derp = false
						selection = selection-1
					end
				end
				if(key==28)then
					displayAccount(accountuser[selection+5])
					title()
					derp = false
				end
				if(key==211)then
					derp = false
					running = false
				end
				if(count<0) then
					count=0
					selection = selection+1
				elseif(count+11>number) then
					count=number-11
					selection = selection-1
				end  
			end
		end
		choice = "guimenu"
	end
	
	function list()
		local theend = ""
		O = 0
		A = 0
		E = 0
		local level = "unknown"
		local done = false
		local acountsu = {}
		local acountsp = {}
		local acountsl = {}
		acountslog = {}
		numAcounts = 0
		local count = 0
		local endnum=11
		herp = false
		local up="  "
		local down="  "
		title()
		local stuff = getsettings()
		local filename = fs.list("userinfo") 
		for _,file in ipairs( filename ) do
			local read = fs.open("userinfo/"..file , "r")
			local pass = read.readLine()
			local level = read.readLine()
			local numLogins = read.readLine()
			if (file=="firsttime" or file=="settings") then
			else
				acountsu[numAcounts] = file
				acountsp[numAcounts] = pass
				acountsl[numAcounts] = level
				acountslog[numAcounts] = numLogins
				numAcounts=numAcounts+1
				if(level=="Employee")then
					E = E+1
				elseif(level=="Admin")then
					A = A+1
				elseif(level=="Owner")then
					O = O+1
				end
			end
			read.close()
		end
		if(numAcounts>1)then
			numAcounts=numAcounts-1
		end
		if(numAcounts<endnum)then
			endnum = numAcounts
		else
			endnum = 11
		end
		while done == false do
			print("Format <username : password : usertype>")
			print(" ")
			for start=0+count,endnum+count,1 do
									
				if (numAcounts==0) then
					print("This database contains no user acounts")
					break
				elseif(numAcounts>0) then 
					if(usertype=="Owner") then
						print("<"..acountsu[start]..addspace(acountsu[start]).." : "..acountsp[start]..addspace(acountsp[start]).." : "..acountsl[start]..addspace(acountsl[start])..">")
					elseif(usertype=="Admin") then
						if(stuff["admin"]=="true")then
							if(acountsl[start]=="Employee")then
								print("<"..acountsu[start]..addspace(acountsu[start]).." : "..acountsp[start]..addspace(acountsp[start]).." : "..acountsl[start]..addspace(acountsl[start])..">")
							else
								print("<"..acountsu[start]..addspace(acountsu[start]).." : ----"..addspace("----").." : "..acountsl[start]..addspace(acountsl[start])..">")	
							end
						else
							print("<"..acountsu[start]..addspace(acountsu[start]).." : ----"..addspace("----").." : "..acountsl[start]..addspace(acountsl[start])..">")	
						end
					end
					
				end
			end
			if(count==0 and endnum==11) then
				up="  "
				down="\\/"
				theend = ""
			elseif(count+11==numAcounts) then
				down="  "
				up="/\\"
				theend = "HIT ENTER TO QUIT"
			elseif(endnum==numAcounts)then
				up="  "
				down="  "
				theend = "HIT ENTER TO QUIT"
			else 
				up="/\\"
				down="\\/"
				theend = ""
			end
			print("               "..up.."               Employees:"..E)
			print("               --               Admins:"..A)
			print("               "..down.."               Owners:"..O)           
			write("         "..theend)             
			x,y = term.getSize()
			term.setCursorPos(x/2+8,y)
			print("Total:"..table.getn(acountsu)+1)
			herp = false
			while herp==false do
				Event, key = os.pullEvent("key")
				if(endnum~=numAcounts)then
					if (key==208) then
						title()
						count=count+1
						herp = true
					elseif (key==200) then
						title()
						count=count-1
						herp = true
					end
				end
				if(key==28)then
					done=true
					herp = true
				end
				if(count<0) then
					count=0
				elseif(count+11>numAcounts) then
					count=numAcounts-11
				else 
				end
			end
			
		end
		
		choice = "guimenu"
	end
	
	function lock()
		stuff = getsettings()
		open = fs.open("userinfo/settings" , "w")
		open.writeLine(stuff["side"])
		if (stuff["lockstate"]=="unlocked") then
			open.writeLine("locked")
			title()
			print("Locking Terminal")
			sleep(1)
		else
			open.writeLine("unlocked")
			title()
			print("Unlocking Terminal")
			sleep(1)
		end
		open.writeLine(stuff["date"])
		open.writeLine(stuff["admin"])
		open.writeLine(stuff["list"])
		open.writeLine(stuff["time"])
		open.close()
		choice = "guimenu"
	end
	
	function settingsgui(setselection)
		title()
		local selection = setselection
		local stuff = getsettings()
		print("System settings")
		print()
		width,height = term.getCursorPos()
		if(selection==1)then
			print("["..stuff["side"]..addspace(stuff["side"],6).."]: side")
		else
			print(" "..stuff["side"]..addspace(stuff["side"],6).." : side")
		end
		
		if(selection==2)then
			print("["..stuff["date"]..addspace(stuff["date"],6).."]: current day")
		else
			print(" "..stuff["date"]..addspace(stuff["date"],6).." : current day")
		end
		
		if(selection==3)then
			print("["..stuff["admin"]..addspace(stuff["admin"],6).."]: can Admin see passwords?")
		else
			print(" "..stuff["admin"]..addspace(stuff["admin"],6).." : can Admin see passwords?")
		end
		
		if(selection==4)then
			print("["..stuff["list"]..addspace(stuff["list"],6).."]: secondary list style")
		else
			print(" "..stuff["list"]..addspace(stuff["list"],6).." : secondary list style")
		end
		
		if(selection==5)then
			print("["..stuff["time"]..addspace(stuff["time"],6).."]: military time")
		else
			print(" "..stuff["time"]..addspace(stuff["time"],6).." : military time")
		end
		if(selection==6)then
			print("[Done"..addspace("Done",6).."]")
		else
			print(" Done")
		end
	end
	
	function settings()
		local minecraft = 1
		title()
		local running = true
		while running do
			settingsgui(minecraft)
			minecraft,key = guiSelection(6,1,minecraft)
			if(key==28)then
				local stuff = getsettings()
				if(minecraft==1)then
					term.setCursorPos(width,height)
					term.clearLine()
					term.setCursorPos(width,height)
					term.write("         : side")
					term.setCursorPos(width+1,height)
					stuff["side"] = io.read()
				elseif(minecraft==3)then
					if(stuff["admin"]=="false")then
						stuff["admin"]="true"
					else
						stuff["admin"]="false"
					end
				elseif(minecraft==4)then
					if(stuff["list"]=="false")then
						stuff["list"]="true"
					else
						stuff["list"]="false"
					end
				elseif(minecraft==5)then
					if(stuff["time"]=="false")then
						stuff["time"]="true"
					else
						stuff["time"]="false"
					end	
				elseif(minecraft==6)then
					running = false
				end
				local edit = fs.open("userinfo/settings" , "w")
				edit.writeLine(stuff["side"])
				edit.writeLine(stuff["lockstate"])
				edit.writeLine(stuff["date"])
				edit.writeLine(stuff["admin"])
				edit.writeLine(stuff["list"])
				edit.writeLine(stuff["time"])
				edit.close()
			end
		end
		choice = "guimenu"
	end
	
--******PROGRAM STARTS HERE*******
start()
while menu==true do
	local stuff = getsettings()
	if (choice=="add") then
		if(pcall(add)==false)then
			title()
			print("Failed to add acount")
			sleep(2)
			choice="guimenu"
		end
	elseif (choice=="edit") then
		if(pcall(edit)==false)then
			title()
			print("Failed to edit acount")
			sleep(2)
			choice="guimenu"
		end
	elseif (choice=="delete") then	
		if(pcall(delete)==false)then
			title()
			print("Failed to delete acount")
			sleep(2)
			choice="guimenu"
		end
	elseif (choice=="list") then
		if(stuff["list"]=="true")then
			if(pcall(otherList)==false)then
				title()
				print("Failed to list available acounts")
				sleep(2)
				choice="guimenu"
			end 
		else
			if(pcall(list)==false)then
				title()
				print("Failed to list available acounts")
				sleep(2)
				choice="guimenu"
			end  
		end
		
	elseif (choice=="lock")then
		if(pcall(lock)==false)then
			title()
			print("Failed to lock terminal")
			sleep(2)
			choice="guimenu" 
		end
	elseif(choice=="settings")then
		if(pcall(settings)==false)then
			title()
			print("Failed to access settings GUI")
			sleep(2)
			choice="guimenu"
		end
	elseif(choice=="guimenu")then
		guimenu()
	else
		if(pcall(promptuserinfo)==false)then
			title()
			print("Failed to get input/Bad input")
			sleep(2)
			--choice="guimenu"
		end
	end
end
term.clear()
term.setCursorPos(1,1)

